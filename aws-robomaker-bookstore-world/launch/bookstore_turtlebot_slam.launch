<launch>
   <!-- Turtlebot robot model -->	

 <arg name="model" default="waffle"/>
  <!-- 
      Only allow users to set (x,y,yaw), otherwise initial 
      2D pose estimates will be wrong 
  -->
  <arg name="x_pos" default="-2.5"/>
  <arg name="y_pos" default="6.0"/>
  <arg name="yaw" default="0.0"/>

  <!-- Floor is not at 0.0 currently -->
  <arg name="z_pos" value="0.30"/>

  <!-- 
       Always set GUI to false for AWS RoboMaker Simulation
       Use gui:=true on roslaunch command-line to run with a gui.
  -->
  <arg name="gui" default="true"/>

  <!-- Load the bookstore world into Gazebo -->
  <include file="$(find aws_robomaker_bookstore_world)/launch/bookstore.launch">
    <arg name="gui" value="$(arg gui)"/>
  </include>
  
  <!-- Spawn robot into simulation -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_waffle -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />



  <!-- SLAM 
    
    Launch this command to generate a occupancy map for the Turtlebot. This map 
    can then be used by turtlebot3_navigation.

    See http://emanual.robotis.com/docs/en/platform/turtlebot3/slam/#slam

    -->
  <arg name="slam_methods" default="gmapping"/>
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
    <arg name="open_rviz" default="false"/>
    <arg name="model" value="waffle"/>
    <arg name="slam_methods" value="$(arg slam_methods)"/>
  </include>
  
  
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="waffle"/>
  </include>
</launch>
