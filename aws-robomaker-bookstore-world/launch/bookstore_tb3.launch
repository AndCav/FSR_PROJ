<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <!-- Always set GUI to false for AWS RoboMaker Simulation
       Use gui:=true on roslaunch command-line to run with a gui.
  -->
  <arg name="gui" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find aws_robomaker_bookstore_world)/worlds/my_bookstore.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" default="$(arg gui)"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
  </include>

  
  <arg name="world"     default="w"/>
  <arg name="tb3_x_pos" default="-6"/>
  <arg name="tb3_y_pos" default="6"/>
  <arg name="tb3_z_pos" default="0.0"/>
  <arg name="tb3_yaw"   default="0"/>
 
    <!-- Turtlebot -->
    
<!--just  Tb3 params-->
  <param name="x_initial" value="$(arg tb3_x_pos)"/>
  <param name="y_initial" value="$(arg tb3_y_pos)"/>
  <param name="x_dest" value="0"/>
  <param name="y_dest" value="0"/>
  <param name="FBL" value="true"/>
  
  
  <group ns = "tb3_0">
        <param name="tf_prefix" value="tb3_0_tf"/>
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" />
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
            args="-urdf -model tb3_0 
            -x $(arg tb3_x_pos) 
            -y $(arg tb3_y_pos) 
            -z $(arg tb3_z_pos) 
            -Y $(arg tb3_yaw)
            -param robot_description" />
        
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
        </node>

  </group>
   <include file="$(find mapper)/launch/control.launch"/>
         
  
  <arg name="map_file" default="$(find aws_robomaker_bookstore_world)/maps/my_bookstoremap.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />


  <!-- Publishes the voxel grid to rviz for display -->
  <node pkg="costmap_2d" type="costmap_2d_markers" name="voxel_visualizer">
  <remap from="voxel_grid" to="costmap/voxel_grid"/>
  </node>

 <!-- Run the costmap node -->
 
  <node name="costmap" pkg="costmap_2d" type="costmap_2d_node" >
   <rosparam file="$(find aws_robomaker_bookstore_world)/param/costmap2d.yaml" command="load" ns="costmap" />
  </node>
 
         
         
   
</launch>
